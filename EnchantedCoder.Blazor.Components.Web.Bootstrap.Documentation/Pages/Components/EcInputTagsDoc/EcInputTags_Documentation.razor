@attribute [Route("/components/" + nameof(EcInputTags))]

<ComponentApiDoc Type="typeof(EcInputTags)">
	<MainContent>
        <DocAlert Type="DocAlertType.Warning">
            Due to breaking change in Bootstrap 5.2, the keyboard navigation stopped working for dropdowns triggered from <code>input</code> (the <code>Up</code> and <code>Down</code> keys).
            As an experimental feature we added our own keyboard navigation routines to the affected components. This might be subject to future change.
            You can check the progress here: <a href="https://github.com/EnchantedCoder/EnchantedCoder.Blazor/issues/348">https://github.com/EnchantedCoder/EnchantedCoder.Blazor/issues/348</a>.
        </DocAlert>

        <DocHeading Title="Basic usage" />
		<Demo Type="typeof(EcInputTags_Demo_Basic)" />

        <DocHeading Title="Static suggestions" />
		<p>
			To offer fixed list of suggestions (simmilar to <code>EcSelect</code>), setup <code>DataProvider</code> to return those values (no matter the input)
			and use <code>@nameof(EcInputTags.SuggestDelay)="0"</code> together with <code>@nameof(EcInputTags.SuggestMinimumLength)="0"</code>.
		</p>
		<Demo Type="typeof(EcInputTags_Demo_FixedSuggestions)" />

        <DocHeading Title="No suggestions" />
		<p>If you don't want to use any suggestions and let the user add tags manualy, just leave the <code>DataProvider</code> unset (<code>null</code>).</p>
		<Demo Type="typeof(EcInputTags_Demo_NoSuggestions)" />

        <DocHeading Title="Restricted tags" />
		<p>If you want to restrict tags to suggested items only, set <code>@nameof(EcInputTags.AllowCustomTags)</code> to <code>false</code>.</p>
		<DocAlert>
			Current @nameof(EcInputTags) implementation for <code>AllowCustomTags="false""</code> allows adding tags only from suggestions (dropdown).
			Keyboard support might be implemented in future (we have to check the added tags with DataProvider to apply the restriction).
		</DocAlert>
		<Demo Type="typeof(EcInputTags_Demo_AllowCustomTags)" />

        <DocHeading Title="Colors" />
		<p>Use <code>TagBackgroundColor</code> and <code>TagTextColor</code> via <code>TagBadgeSettings</code> to adjust colors.</p>
		<Demo Type="typeof(EcInputTags_Demo_Colors)" />

        <DocHeading Title="Naked" />
		<p>Consider enabling <code>@nameof(EcInputTags.ShowAddButton)</code> when using <code>@nameof(EcInputTags.Naked)</code>.</p>
		<Demo Type="typeof(EcInputTags_Demo_Naked)" />

        <DocHeading Title="Naked sizes" Level="3" />
		<p>Use <code>InputSize</code> parameter.</p>
		<Demo Type="typeof(EcInputTags_Demo_Naked_InputSize)" />

        <DocHeading Title="Add-button text" />
		<p>You might want to set custom <code>@nameof(EcInputTags.AddButtonText)</code> especially for <code>@nameof(EcInputTags.Naked)</code> input.</p>
		<Demo Type="typeof(EcInputTags_Demo_Naked_AddButtonText)" />

        <DocHeading Title="Disabled" />
		<p>You can disable the input by setting <code>Enabled="false"</code>.</p>
		<Demo Type="typeof(EcInputTags_Demo_Disabled)" />

        <DocHeading Title="Input groups" />
        <p><code>EcInputTags</code> component supports input groups. Learn more about them <a href="https://EnchantedCoder.blazor.eu/components/Inputs#InputGroups">here</a>.</p>
        <Demo Type="typeof(EcInputTags_Demo_InputGroups)" />
        <p>Simple text can be used as an input group, or you can create a custom input group template.</p>
        <Demo Type="typeof(EcInputTags_Demo_InputGroupTemplates)" />
	</MainContent>

	<CssVariables>
		<ComponentApiDocCssVariable Name="--ec-input-tags-tag-margin" Default="0 .25rem 0 0">
			Margin of tags.
		</ComponentApiDocCssVariable>
		<ComponentApiDocCssVariable Name="--ec-input-tags-input-width" Default="3em">
			Input width.
		</ComponentApiDocCssVariable>
		<ComponentApiDocCssVariable Name="--ec-input-tags-input-placeholder-color" Default="var(--bs-secondary-color)">
			Color of the placeholder input.
		</ComponentApiDocCssVariable>
		<ComponentApiDocCssVariable Name="--ec-input-tags-naked-font-size-lg" Default="1.25em">
			Naked font size large.
		</ComponentApiDocCssVariable>
		<ComponentApiDocCssVariable Name="--ec-input-tags-naked-font-size-sm" Default=".875em">
			Naked font size small.
		</ComponentApiDocCssVariable>
		<ComponentApiDocCssVariable Name="--ec-input-tags-control-focused-box-shadow" Default="0 0 0 0.25rem rgba(var(--bs-primary-rgb), 0.25)">
			Box shadow of the control when focused.
		</ComponentApiDocCssVariable>
		<ComponentApiDocCssVariable Name="--ec-input-tags-control-focused-border-color" Default="rgba(var(--bs-primary-rgb), .3)">
			Border color of the control when focused (as the color is not exposed via CSS variables from Bootstrap, we use rgba derivate from --bs-primary-rgb and the color is not 100% accurate).
		</ComponentApiDocCssVariable>
		<ComponentApiDocCssVariable Name="--ec-input-tags-add-button-text-margin" Default="rgba(var(--bs-primary-rgb), .3)">
			Margin of an add button text.
		</ComponentApiDocCssVariable>
		<ComponentApiDocCssVariable Name="--ec-input-tags-dropdown-item-highlighted-background-color" Default="var(--bs-tertiary-bg)">
			Background color of a dropdown item when highlighted.
		</ComponentApiDocCssVariable>

	</CssVariables>

</ComponentApiDoc>