<EcGrid SelectedDataItem="selectedDataItem"
        SelectedDataItemChanged="HandleSelectedDataItemChanged"
        TItem="EditableCultureInfo"
        Responsive="true"
        DataProvider="ClientSideProcessingDataProvider"
        PageSize="10">
    <Columns>
        <EcGridColumn HeaderText="LCID" SortKeySelector="@(item => item.LCID)" IsDefaultSortColumn="true">
            <ItemTemplate Context="item">
                @if (selectedDataItem == item)
                {
                    <EcInputNumber @bind-Value="item.LCID" />
                }
                else
                {
                    <div>@item.LCID</div>
                }
            </ItemTemplate>
        </EcGridColumn>
        <EcGridColumn HeaderText="DisplayName" SortKeySelector="@(item => item.DisplayName)">
            <ItemTemplate Context="item">
                @if (selectedDataItem == item)
                {
                    <EcInputText @bind-Value="item.DisplayName" />
                }
                else
                {
                    <div>@item.DisplayName</div>
                }
            </ItemTemplate>
        </EcGridColumn>
        <EcGridColumn HeaderText="Name" SortKeySelector="@(item => item.Name)">
            <ItemTemplate Context="item">
                @if (selectedDataItem == item)
                {
                    <EcInputText @bind-Value="item.Name" />
                }
                else
                {
                    <div>@item.Name</div>
                }
            </ItemTemplate>
        </EcGridColumn>
        <EcGridColumn HeaderText="EnglishName" SortKeySelector="@(item => item.EnglishName)">
            <ItemTemplate Context="item">
                @if (selectedDataItem == item)
                {
                    <EcInputText @bind-Value="item.EnglishName" />
                }
                else
                {
                    <div>@item.EnglishName</div>
                }
            </ItemTemplate>
        </EcGridColumn>
    </Columns>
</EcGrid>

@code {
    private EditableCultureInfo selectedDataItem;
    private List<EditableCultureInfo> localEditableCultureInfos = CultureInfo.GetCultures(CultureTypes.AllCultures).Select(c => new EditableCultureInfo()
        {
            LCID = c.LCID,
            DisplayName = c.DisplayName,
            Name = c.Name,
            EnglishName = c.EnglishName
        }).ToList();

    private Task<GridDataProviderResult<EditableCultureInfo>> ClientSideProcessingDataProvider(GridDataProviderRequest<EditableCultureInfo> request)
    {
        return Task.FromResult(request.ApplyTo(localEditableCultureInfos));
    }

    private async Task HandleSelectedDataItemChanged(EditableCultureInfo newSelectedDataItem)
    {
        if (selectedDataItem != null)
        {
            // TODO: add your logic to save item changes here, the item which was selected (edited) is in selectedDataItem
            await Task.Delay(200); // simulates API call (saving changes itself)
            Console.WriteLine("Saving... " + selectedDataItem);
        }

        selectedDataItem = newSelectedDataItem;
    }

    private record EditableCultureInfo
    {
        public int LCID { get; set; }
        public string DisplayName { get; set; }
        public string Name { get; set; }
        public string EnglishName { get; set; }
    }
}
