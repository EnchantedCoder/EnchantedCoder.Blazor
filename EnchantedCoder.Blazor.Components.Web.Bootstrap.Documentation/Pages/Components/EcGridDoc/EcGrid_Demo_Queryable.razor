@inject IDemoDataService DemoDataService

<EcGrid PageSize="5" TItem="EmployeeDto" Responsive="true" DataProvider="GetGridData">
	<Columns>
		<EcGridColumn HeaderText="Name" ItemTextSelector="employee => employee.Name" SortKeySelector="employee => employee.Name" IsDefaultSortColumn="true" />
		<EcGridColumn HeaderText="Phone" ItemTextSelector="employee => employee.Phone" SortKeySelector="employee => employee.Phone" />
		<EcGridColumn HeaderText="Salary" ItemTextSelector="@(employee => employee.Salary.ToString("c0"))" SortKeySelector="employee => employee.Salary" />
		<EcGridColumn HeaderText="Position" ItemTextSelector="employee => employee.Position" SortKeySelector="employee => employee.Position" />
		<EcGridColumn HeaderText="Location" ItemTextSelector="employee => employee.Location" SortKeySelector="employee => employee.Location" />
	</Columns>
</EcGrid>

@code {
	private async Task<GridDataProviderResult<EmployeeDto>> GetGridData(GridDataProviderRequest<EmployeeDto> request)
	{
		await Task.Delay(100); // simulate server delay

		var query = DemoDataService.GetEmployeesAsQueryable();
		// query = query.Where();

		return new GridDataProviderResult<EmployeeDto>()
		{
			Data = query.ApplyGridDataProviderRequest(request).ToList(), // use ToListAsync(request.CancellationToken) for EF core async data loading
			TotalCount = query.Count() // use CountAsync(request.CancellationToken) for EF core async data loading
		};
	}
}