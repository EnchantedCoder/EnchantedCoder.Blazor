@namespace EnchantedCoder.Blazor.Components.Web.Bootstrap.Internal

<span class="@CssClassHelper.Combine((HasInputGroupsEffective ? "input-group" : null), InputSizeEffective.AsInputGroupCssClass(), InputGroupCssClass)">

    @if (InputGroupStartText is not null)
    {
        <span class="input-group-text">@InputGroupStartText</span>
    }

    @InputGroupStartTemplate

    <div class="@CssClassHelper.Combine("ec-input-tags-control",
									GetFormControlCssClasses(),
									GetNakedCssClasses(),
                                    this.EnabledEffective ? null : "ec-input-tags-control-disabled",
									this.CssClass)"
         @onclick="async () => await autosuggestInput.FocusAsync()"
         @onclick:stopPropagation>

        @foreach (string tag in ValueEffective)
        {
            <EcBadge @key="@tag"
                 Settings="this.TagBadgeSettingsEffective"
                 CssClass="@CssClassHelper.Combine("ec-tag", this.TagBadgeSettingsEffective.CssClass)">
                @* Looks weird but should work :-D *@
                @tag
                @if (this.EnabledEffective)
                {
                    <span class="ec-tag-remove-button" @onclick="async () => await HandleRemoveClickAsync(tag)" @onclick:stopPropagation role="button" tabindex="0">
                        <EcIcon Icon="BootstrapIcon.X" />
                    </span>
                }
            </EcBadge>
        }

        @if (ShowAddButtonEffective && EnabledEffective && !currentlyFocused && !isDropdownOpened)
        {
            var showAddButtonText = !this.ValueEffective.Any() && !String.IsNullOrEmpty(AddButtonText);

            <EcBadge Settings="this.TagBadgeSettingsEffective"
                 CssClass="@CssClassHelper.Combine("ec-tag ec-tag-add-button", this.TagBadgeSettingsEffective.CssClass)"
                 role="button"
                 tabindex="0">
                <span class="ec-tag-add-button-icon" role="button">
                    @* We don't need to catch onClick here as it gets propagated to parent div*@
                    <EcIcon Icon="BootstrapIcon.PlusLg" />
                </span>
                @if (showAddButtonText)
                {
                    <span class="ec-tag-add-button-text">@AddButtonText</span>
                }
            </EcBadge>
        }

        <div id="@dropdownId" class="@CssClassHelper.Combine("dropdown", (LabelTypeEffective == EnchantedCoder.Blazor.Components.Web.Bootstrap.LabelType.Floating) ? "form-floating" : null)">
            <EcInputTagsAutosuggestInputInternal @ref="autosuggestInput"
                                                 InputId="@InputId"
                                                 EnabledEffective="@EnabledEffective"
                                                 Value="@userInput"
                                                 OnInput="HandleInputInput"
                                                 OnFocus="HandleInputFocus"
                                                 OnBlur="HandleInputBlur"
                                                 OnMouseDown="HandleInputMouseDown"
                                                 Placeholder="@(ValueEffective.Any() ? null : Placeholder)"
                                                 CssClass="border-0 flex-grow-1"
                                                 Offset="@InputOffset"
                                                 AdditionalAttributes="@this.AdditionalAttributes" />
            @if (dataProviderInProgress)
            {
                <EcSpinner Type="SpinnerType.Border" Size="SpinnerSize.Small" />
            }
            <EcAutosuggestItemsInternal TItem="string"
                                        Items="@suggestions"
                                        OnItemClick="HandleItemSelected"
                                        FocusedItemCssClass="ec-input-tags-dropdown-item-focused"
                                        FocusedItemIndex="@focusedItemIndex">

                <ItemTemplate>
                    @context
                </ItemTemplate>

            </EcAutosuggestItemsInternal>
        </div>

    </div>

    @InputGroupEndTemplate

    @if (InputGroupEndText is not null)
    {
        <span class="input-group-text">@InputGroupEndText</span>
    }

</span>
