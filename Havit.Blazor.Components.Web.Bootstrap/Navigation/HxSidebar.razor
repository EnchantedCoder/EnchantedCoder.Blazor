@namespace Havit.Blazor.Components.Web.Bootstrap

<div class="@CssClassHelper.Combine("hx-sidebar", GetResponsiveCssClass("flex-??-grow-0"), GetCollapsedCssClass(), this.CssClass)" id="@Id">
    <div class="nav-menu">

        @if (HeaderTemplate is not null)
        {
            <div class="hx-sidebar-header">
                <CascadingValue Value="@this">
                    @HeaderTemplate
                </CascadingValue>
                <HxButton
                    CssClass="@CssClassHelper.Combine("hx-sidebar-navbar-toggler", GetResponsiveCssClass("d-??-none"))"
                    OnClick=@(async () => await SetCollapsed(false))
                    data-bs-toggle="collapse"
                    data-bs-target="@($"#{NavContentElementId}")"
                    aria-controls="@NavContentElementId"
                    aria-expanded="false"
                    aria-label="Toggle navigation"
                    Icon="BootstrapIcon.List" />
            </div>
        }

        <div class="@CssClassHelper.Combine("hx-sidebar-collapse collapse", GetResponsiveCssClass("d-??-flex"), (!Collapsed) ? "overflow-auto": null)" id="@NavContentElementId">
            <div class="hx-sidebar-body">
                <HxNav Id="@navId" Orientation="NavOrientation.Vertical">
                    <CascadingValue Value="@this" IsFixed="true">
                        @ItemsTemplate
                    </CascadingValue>
                </HxNav>
                <div class="hx-sidebar-toggler" role="button" @onclick="HandleCollapseToggleClick"
                     @onclick:stopPropagation="true">

                    @if (TogglerTemplate is null)
                    {
                        <div class="@CssClassHelper.Combine(
                            "hx-sidebar-toggler-icon-wrapper",
                            GetResponsiveCssClass("d-??-flex"))">
                            <HxIcon CssClass="hx-sidebar-toggler-icon" Icon="@(Collapsed ? ExpandIcon : CollapseIcon)" />
                        </div>
                    }
                    else
                    {
                        @TogglerTemplate(new() { SidebarCollapsed = this.Collapsed })
                    }
                </div>
            </div>

            @if (FooterTemplate is not null)
            {
                <div class="hx-sidebar-footer">
                    @FooterTemplate(new() { SidebarCollapsed = this.Collapsed })
                </div>
            }
        </div>
    </div>
</div>